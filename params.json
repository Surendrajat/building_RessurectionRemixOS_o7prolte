{"name":"Building resurrectionremixos o7prolte","tagline":"A guide to build RR OS for o7prolte","body":"### **`ROM & Environment details`**\r\n- OS: **`Resurrection Remix 7.0.1`**\r\n- Android version: **`9.0 Pie`**\r\n- Host OS: **`Ubuntu 16.04+`**\r\n\r\n### **`Setup env & Sync ROM Source`**\r\n- Install required packages\r\n\t```bash\r\n\tsudo apt install android-tools-adb bc bison build-essential ccache curl flex g++-multilib gcc-multilib git-core gnupg gperf htop imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev libc6-dev libcurl4-openssl-dev libesd0-dev libgl1-mesa-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libx11-dev libxml2 libxml2-utils lzop maven ncftp nss-updatedb pngcrush python-lunch rsync schedtool screen squashfs-tools tmux unzip w3m x11proto-core-dev xsltproc yasm zip zlib1g-dev\r\n\t```\r\n- Install **`repo`** tool\r\n\t```bash\r\n\tmkdir ~/bin && curl http://commondatastorage.googleapis.com/git-repo-downloads/repo > ~/bin/repo && chmod a+x ~/bin/repo\r\n\t```\r\n- Setup **`git credential`**\r\n\t```bash\r\n\tgit config --global user.email \"your-email-address\"\r\n\tgit config --global user.name \"your-git-username\"\r\n\t```\r\n- Create new **`RR`** dir\r\n\t```bash\r\n\tmkdir ~/RR && cd ~/RR/\r\n\t```\r\n- Initialize **`repo`** in **`RR`** dir with **`default manifest`**\r\n\t```bash\r\n\tyes | repo init -u https://github.com/ResurrectionRemix/platform_manifest.git -b pie --depth=1\r\n\t```\r\n- Clone **`local manifest`** (device tree, kernel source, vendor blobs etc.)\r\n\t```bash\r\n\tcd .repo && git clone https://github.com/on7/local_manifests && cd ..\r\n\t```\r\n- Sync the **`ROM Source`**\r\n\t```bash\r\n\trepo sync -c --no-tags --no-clone-bundle -f --force-sync -j16\r\n\t```\r\n\t- `-jN`: `N` <= `2 * No. of total CPU threads`\r\n\r\n### **`Build the ROM`**\r\n- Enable **`50GB`** **`CACHE`**\r\n\t```bash\r\n\texport USE_CCACHE=1\r\n\texport CCACHE_DIR=~/RR/.ccache\r\n\t./prebuilts/misc/linux-x86/ccache/ccache -M 50G\r\n\t```\r\n- Clean previous builds (if any)\r\n\t```bash\r\n\tmake clean\t\t\t#deletes all the object files created\r\n\t# OR\r\n\tmake clobber  \t\t#deletes all the object files AND the intermediate dependency files generated\r\n\t# OR\r\n\tmake installclean   #cleans recently built installation files only(useful for quick recompilation)\r\n\t```\r\n- Setup build environment\r\n\t```bash\r\n\t. build/envsetup.sh\r\n\t```\r\n- Choose the build target\r\n\t```bash\r\n\tlunch rr_o7prolte-userdebug\r\n\t```\r\n- Finally build it!!!\r\n\t```bash\r\n\tmake -j16 bacon\r\n\t```\r\n### **`Troubleshooting`**\r\n- `java.lang.OutOfMemoryError` : Set `_JAVA_OPTIONS` with lower value than your physical memory (RAM)\r\n\t```bash\r\n\t#for example you've 4GB of RAM put 3GB limit for JAVA processes\r\n\texport _JAVA_OPTIONS=\"-Xmx3g\"\r\n\t```\r\n","note":"Don't delete this file! It's used internally to help with page regeneration."}